{"version":3,"file":"src_Contexts_CreateContract_tsx.chunk.bundle","mappings":"kPAAAA,EAAAC,EAAAC,EAAA,QAA0BC,EAAAD,EAAA,OAOrBE,EAAW,SAAXA,GAAW,OAAXA,EAAW,sCAAXA,CAAW,EAAXA,GAAW,IASVC,EAAU,SAACC,EAAkBC,GACjC,OAAQA,EAAOC,OACRJ,EAAYK,kBACfC,OAAAC,OAAA,GACKL,EAAU,CACbM,aAAcL,EAAOM,QACrBC,WAAW,IAGNR,CAEb,EAEMS,EAAwBC,EAAAA,QAAMC,cAAc,CAChDC,mBAAoB,SAACC,GAA+B,IAG/BC,EAAAA,kBAAG,WAAH,OAASJ,EAAAA,QAAMK,WAAWN,EAAuB,EA6BtEK,EAAAA,QA3B6B,SAAHE,GAIrB,IAHLC,EAAQD,EAARC,SAKAC,EAA0BR,EAAAA,QAAMS,WAAWpB,EAAS,CAClDO,kBAAcc,EACdZ,WAAW,IACXa,GAAA,EAAAC,EAAAC,SAAAL,EAAA,GAHKM,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAOhBK,EAAchB,EAAAA,QAAMiB,SACxB,iBAAO,CACLf,mBAAoB,SAACC,GACnBY,EAAS,CAAEvB,KAAMJ,EAAYK,kBAAmBI,QAASM,GAC3D,EACD,GACD,IAGF,OACE,EAAAhB,EAAA+B,KAACnB,EAAsBoB,SAAQ,CAACC,MAAOJ,EAAYT,SAChDA,EAAQb,OAAAC,OAAC,CAAC,EAAImB,KAGrB,C","sources":["webpack:///./src/Contexts/CreateContract.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype State = {\r\n  typeContract: string | undefined,\r\n  isLoading: boolean\r\n}\r\n\r\nenum ActionTypes {\r\n  set_type_contract = 'set_type_contract',\r\n}\r\n\r\ntype Action = {\r\n  type: ActionTypes;\r\n  payload?: any;\r\n};\r\n\r\nconst reducer = (prevState: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case ActionTypes.set_type_contract:\r\n      return {\r\n        ...prevState,\r\n        typeContract: action.payload,\r\n        isLoading: true\r\n      };\r\n    default:\r\n      return prevState;\r\n  }\r\n};\r\n\r\nconst CreateContractContext = React.createContext({\r\n  changeTypeContract: (data: string | undefined) => { },\r\n});\r\n\r\nconst useCreateContract = () => React.useContext(CreateContractContext);\r\n\r\nconst CreateContractProvider = ({\r\n  children,\r\n}: {\r\n  children: (data: State) => React.ReactNode;\r\n}) => {\r\n\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    typeContract: undefined,\r\n    isLoading: false\r\n  });\r\n\r\n\r\n\r\n  const authContext = React.useMemo(\r\n    () => ({\r\n      changeTypeContract: (data: string | undefined) => {\r\n        dispatch({ type: ActionTypes.set_type_contract, payload: data });\r\n      },\r\n    }),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <CreateContractContext.Provider value={authContext}>\r\n      {children({ ...state })}\r\n    </CreateContractContext.Provider>\r\n  );\r\n};\r\n\r\nexport { useCreateContract };\r\nexport default CreateContractProvider;"],"names":["_react","_interopRequireDefault","require","_jsxRuntime","ActionTypes","reducer","prevState","action","type","set_type_contract","Object","assign","typeContract","payload","isLoading","CreateContractContext","React","createContext","changeTypeContract","data","exports","useContext","_ref","children","_React$useReducer","useReducer","undefined","_React$useReducer2","_slicedToArray2","default","state","dispatch","authContext","useMemo","jsx","Provider","value"],"sourceRoot":""}